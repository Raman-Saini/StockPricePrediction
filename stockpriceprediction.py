# -*- coding: utf-8 -*-
"""stockpriceprediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14bucUjbo_btsSvr87OEJdE2hXvYt7CT-
"""
#Imports
import math 
import pandas_datareader as web
import numpy as np
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from keras.models import Sequential
from keras.layers import Dense, LSTM 
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

#Get Stock Quote 
df = web.DataReader("TSLA", data_source='yahoo', start='2012-01-01', end='2019-12-17')
#Show The Data 
df

#Get Number Of Rows And Cols
df.shape

#Visualize The Closing Price History
plt.figure(figsize=(16,8))
plt.title('Closing Price History')
plt.plot(df['Close'])
plt.xlabel('Date', fontsize=18)
plt.ylabel('Close Price USD ($)', fontsize=18)
plt.show()

#Create New Data Frame With Only The Close Column
data = df.filter(['Close'])
#Convert Data Frame To Numpy Array
dataset = data.values
#Get The NUmber OF Rows To Train The Model On
training_data_len = math.ceil( len(dataset) * .8 )
#View
training_data_len

#Scale The Data
scaler = MinMaxScaler(feature_range=(0,1))
scaled_data = scaler.fit_transform(dataset)
#Show
scaled_data

#Create The Training Data Set 
#Create The Scaled Training Data Set
train_data = scaled_data[0:training_data_len , :]
#Split The Data Into x_train And y_train
x_train = []
y_train = []

for i in range(60, len(train_data)):
  x_train.append(train_data[i-60:i, 0])
  y_train.append(train_data[i, 0])
  if i <= 61:
    print(x_train)
    print(y_train)
    print()

#Convert The x_train and y_train To NumPy Arrays
x_train, y_train = np.array(x_train), np.array(y_train)

#Reshape The Data
x_train = np.reshape(x_train, (x_train.shape[0], x_train.shape[1], 1))
x_train.shape

#Build The LSTM Model
model = Sequential()
model.add(LSTM(50, return_sequences=True, input_shape = (x_train.shape[1], 1)))
model.add(LSTM(50, return_sequences=False))
model.add(Dense(25))
model.add(Dense(1))

#Compile The Model
model.compile(optimizer='adam', loss='mean_squared_error')

#Train The Model
model.fit(x_train, y_train, batch_size=1, epochs=1)

#Create The Testing Data Set
#Create A New Array Containg Scaled Values From Index 1546 To 2007
test_data = scaled_data[training_data_len - 60: , :]
#Create The Data Sets x_test And y_test
x_test = []
y_test = dataset[training_data_len:, :]

for i in range(60, len(test_data)):
  x_test.append(test_data[i-60:i, 0])

#Convert The Data Into A Numpy Array
x_test = np.array(x_test)

#Reshape The Data
x_test = np.reshape(x_test, (x_test.shape[0], x_test.shape[1], 1))
x_test.shape

#Get Models Predicted Price Values
predictions = model.predict(x_test)
predictions = scaler.inverse_transform(predictions)

#Get The Root Mean Squared Error (RMSE)
rmse = np.sqrt( np.mean( predictions - y_test )** 2 )
#Show
rmse

#Plot The Data
train = data[:training_data_len]
valid = data[training_data_len:]
valid['Predictions'] = predictions
#Visualize The Model
plt.figure(figsize=(16,8))
plt.title('Model')
plt.xlabel('Date', fontsize=18)
plt.ylabel('Close Price USD ($)', fontsize=18)
plt.plot(train['Close'])
plt.plot(valid[['Close', 'Predictions']])
plt.legend(['Train', 'Val', 'Predictions'], loc='lower right')
plt.show()

#Show The Valid And Predicted Prices
valid

#Get The Quote
tesla_quote = web.DataReader("TSLA", data_source='yahoo', start='2012-01-01', end='2019-12-17')
#Create A New Data
new_df = tesla_quote.filter(['Close'])
#Get Last 60 Day Closing Price Values And Convert Them To An Array
last_60_days = new_df[-60:].values
#Scale The Data To Be Vales Between 0 And 1
last_60_days_scaled = scaler.transform(last_60_days)
#Create An Empty List
X_test = []
#Append Past 60 Days
X_test.append(last_60_days_scaled)
#Convert X_test Data Set To Numpy Array
X_test = np.array(X_test)
#Reshape The Data
X_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], 1))
#Get The Predicted Scale Price
pred_price = model.predict(X_test)
#Undo Scaling
pred_price = scaler.inverse_transform(pred_price)
print(pred_price)

#Get The Quote
tesla_quote2 = web.DataReader("TSLA", data_source='yahoo', start='2012-01-01', end='2019-12-18')
print(tesla_quote2['Close'])